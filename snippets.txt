//https://snippet-generator.app
{
	"M칩dulo B치sico NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsModule",
		"body": [
			"/**",
			"*@NApiVersion 2.1",
			"*/",
			"",
			"",
			"export let execute = () : string => {",
			"    return ''",
			"}"
		],
	},
	"M칩dulo B치sico NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsModule",
		"body": [
			"define([], function() {",
			"",
			"    const execute = () => {",
			"",
			"    }",
			"",
			"    return {",
			"        execute",
			"    }",
			"})"
		],
	},
	"ClientScript NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsClientScript",
		"body": [
			"/**",
			"*@NApiVersion 2.1",
			"*@NScriptType ClientScript",
			"*/",
			"",
			"import {EntryPoints} from 'N/types';",
			"import * as log from 'N/log';",
			"",
			"export let pageInit: EntryPoints.Client.pageInit = (context: EntryPoints.Client.pageInitContext) => {}",
			"export let saveRecord: EntryPoints.Client.saveRecord = (scriptContext: EntryPoints.Client.saveRecordContext) => { return true }",
			"export let validateField: EntryPoints.Client.validateField = (context: EntryPoints.Client.validateFieldContext) => { return true }",
			"export let fieldChanged: EntryPoints.Client.fieldChanged = (context: EntryPoints.Client.fieldChangedContext) => {}",
			"export let postSourcing: EntryPoints.Client.postSourcing = (context: EntryPoints.Client.postSourcingContext) => {}",
			"export let lineInit: EntryPoints.Client.lineInit = (context: EntryPoints.Client.lineInitContext) => {}",
			"export let validateDelete: EntryPoints.Client.validateDelete = (context: EntryPoints.Client.validateDeleteContext) => { return true }",
			"export let validateInsert: EntryPoints.Client.validateInsert = (context: EntryPoints.Client.validateInsertContext) => { return true }",
			"export let validateLine: EntryPoints.Client.validateLine = (context: EntryPoints.Client.validateLineContext) => { return true }",
			"export let sublistChanged: EntryPoints.Client.sublistChanged = (context: EntryPoints.Client.sublistChangedContext) => {}"
		],
	},
	"ClientScript NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsClientScript",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType ClientScript",
			" */",
			"define([], function() {",
			"",
			"    function pageInit(context) {}",
			"",
			"    function saveRecord(context) {}",
			"",
			"    function validateField(context) {}",
			"",
			"    function fieldChanged(context) {}",
			"",
			"    function postSourcing(context) {}",
			"",
			"    function lineInit(context) {}",
			"",
			"    function validateDelete(context) {}",
			"",
			"    function validateInsert(context) {}",
			"",
			"    function validateLine(context) {}",
			"",
			"    function sublistChanged(context) {}",
			"",
			"    return {",
			"        pageInit: pageInit,",
			"        saveRecord: saveRecord,",
			"        validateField: validateField,",
			"        fieldChanged: fieldChanged,",
			"        postSourcing: postSourcing,",
			"        lineInit: lineInit,",
			"        validateDelete: validateDelete,",
			"        validateInsert: validateInsert,",
			"        validateLine: validateLine,",
			"        sublistChanged: sublistChanged",
			"    }",
			"})",
			""
		],
	},
	"UserEvent NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsUserEvent",
		"body": [
			"/**",
			"*@NApiVersion 2.1",
			"*@NScriptType UserEventScript",
			"*/",
			"",
			"import {EntryPoints} from 'N/types';",
			"import * as log from 'N/log';",
			"",
			"export let beforeLoad: EntryPoints.UserEvent.beforeLoad = (context: EntryPoints.UserEvent.beforeLoadContext) => {}",
			"export let beforeSubmit: EntryPoints.UserEvent.beforeSubmit = (context: EntryPoints.UserEvent.beforeSubmitContext) => {}",
			"export let afterSubmit: EntryPoints.UserEvent.afterSubmit = (context: EntryPoints.UserEvent.afterSubmitContext) => {}"
		],
	},
	"UserEvent NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsUserEvent",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType UserEventScript",
			" */",
			"define([], function() {",
			"",
			"    function beforeLoad(context) {}",
			"",
			"    function beforeSubmit(context) {}",
			"",
			"    function afterSubmit(context) {}",
			"",
			"    return {",
			"        beforeLoad: beforeLoad,",
			"        beforeSubmit: beforeSubmit,",
			"        afterSubmit: afterSubmit",
			"    }",
			"})",
			""
		],
	},
	"MapReduce NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsMapReduce",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType MapReduceScript",
			" */",
			"",
			" import {EntryPoints} from 'N/types';",
			" import * as log from 'N/log';",
			" ",
			" export let getInputData: EntryPoints.MapReduce.getInputData = (context: EntryPoints.MapReduce.getInputDataContext) => { }",
			" export let map: EntryPoints.MapReduce.map = (context: EntryPoints.MapReduce.mapContext) => {}",
			" export let reduce: EntryPoints.MapReduce.reduce = (context: EntryPoints.MapReduce.reduceContext) => {}",
			" export let summarize: EntryPoints.MapReduce.summarize = (summary: EntryPoints.MapReduce.summarizeContext) => {}"
		],
	},
	"MapReduce NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsMapReduce",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType MapReduceScript",
			" */",
			"define([], function() {",
			"",
			"    function getInputData() {}",
			"",
			"    function map(context) {}",
			"",
			"    function reduce(context) {}",
			"",
			"    function summarize(summary) {}",
			"",
			"    return {",
			"        getInputData: getInputData,",
			"        map: map,",
			"        reduce: reduce,",
			"        summarize: summarize",
			"    }",
			"})",
			""
		],
	},
	"Suitelet NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsSuitelet",
		"body": [
			"/**",
			"*@NApiVersion 2.1",
			"*@NScriptType Suitelet",
			"*/",
			"",
			"import {EntryPoints} from 'N/types';",
			"import * as log from 'N/log';",
			"",
			"export let onRequest: EntryPoints.Suitelet.onRequest = (context: EntryPoints.Suitelet.onRequestContext) => {}"
		],
	},
	"Suitelet NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsSuitelet",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType Suitelet",
			" */",
			"define([], function() {",
			"",
			"    function onRequest(context) {}",
			"",
			"    return {",
			"        onRequest: onRequest",
			"    }",
			"})",
			""
		],
	},
	"RESTlet NetSuite - TypeScript": {
		"scope": "typescript",
		"prefix": "tsRestlet",
		"body": [
			"/**",
			"*@NApiVersion 2.1",
			"*@NScriptType Restlet",
			"*/",
			"",
			"import {EntryPoints} from 'N/types';",
			"import * as log from 'N/log';",
			"",
			"export let get: EntryPoints.RESTlet.get = (context: any) => {}",
			"export let post: EntryPoints.RESTlet.post = (context: any) => {}",
			"export let put: EntryPoints.RESTlet.put = (context: any) => {}",
			"export let delete_: EntryPoints.RESTlet.delete_ = (context: any) => {}"
		],
	},
	"RESTlet NetSuite - JavaScript": {
		"scope": "javascript",
		"prefix": "nsRestlet",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType Restlet",
			" */",
			"define([], function() {",
			"",
			"    function _get(context) {}",
			"",
			"    function _post(context) {}",
			"",
			"    function _put(context) {}",
			"",
			"    function _delete(context) {}",
			"",
			"    return {",
			"        get: _get,",
			"        post: _post,",
			"        put: _put,",
			"        delete: _delete",
			"    }",
			"})",
			""
		],
		"description": ""
	},
	"Custom Script with Deploy - XML": {
		"scope": "xml",
		"prefix": "nsCustomScript",
		"body": [
			"<clientscript scriptid=\"customscript_<NAME OF SCRIPT>\">",
			"  <description>DESCRIPTION OF SCRIPT</description>",
			"  <isinactive>F</isinactive>",
			"  <name>NAME OF SCRIPT</name>",
			"  <notifyadmins>F</notifyadmins>",
			"  <notifyemails>F</notifyemails>",
			"  <notifyowner>F</notifyowner>",
			"  <notifyuser>F</notifyuser>",
			"  <scriptfile>[/SuiteScripts/PATH_OF_SCRIPT]</scriptfile>",
			"  <scriptdeployments>",
			"    <scriptdeployment scriptid=\"customdeploy_<NAME OF DEPLOY>\">",
			"      <allemployees>F</allemployees>",
			"      <alllocalizationcontexts>T</alllocalizationcontexts>",
			"      <allpartners>F</allpartners>",
			"      <allroles>T</allroles>",
			"      <audslctrole></audslctrole>",
			"      <eventtype></eventtype>",
			"      <executioncontext>ACTION|ADVANCEDREVREC|BANKCONNECTIVITY|BANKSTATEMENTPARSER|BUNDLEINSTALLATION|CLIENT|CONSOLRATEADJUSTOR|CSVIMPORT|CUSTOMGLLINES|CUSTOMMASSUPDATE|DATASETBUILDER|DEBUGGER|EMAILCAPTURE|FICONNECTIVITY|FIPARSER|MAPREDUCE|OTHER|PAYMENTGATEWAY|PAYMENTPOSTBACK|PLATFORMEXTENSION|PORTLET|PROMOTIONS|RECORDACTION|RESTLET|RESTWEBSERVICES|SCHEDULED|SDFINSTALLATION|SHIPPINGPARTNERS|SUITELET|TAXCALCULATION|USEREVENT|USERINTERFACE|WEBSERVICES|WORKBOOKBUILDER|WORKFLOW</executioncontext>",
			"      <isdeployed>T</isdeployed>",
			"      <loglevel>DEBUG</loglevel>",
			"      <recordtype>[scriptid=<SAME SCRIPT ID>]</recordtype>",
			"      <status>RELEASED</status>",
			"    </scriptdeployment>",
			"  </scriptdeployments>",
			"</clientscript>"
		],
	}
}